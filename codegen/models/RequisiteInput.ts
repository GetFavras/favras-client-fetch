/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseSchemaInput } from './ResponseSchemaInput';
import {
    ResponseSchemaInputFromJSON,
    ResponseSchemaInputFromJSONTyped,
    ResponseSchemaInputToJSON,
    ResponseSchemaInputToJSONTyped,
} from './ResponseSchemaInput';
import type { Strategy } from './Strategy';
import {
    StrategyFromJSON,
    StrategyFromJSONTyped,
    StrategyToJSON,
    StrategyToJSONTyped,
} from './Strategy';

/**
 * 
 * @export
 * @interface RequisiteInput
 */
export interface RequisiteInput {
    /**
     * 
     * @type {string}
     * @memberof RequisiteInput
     */
    id?: string;
    /**
     * 
     * @type {Strategy}
     * @memberof RequisiteInput
     */
    strategy: Strategy;
    /**
     * 
     * @type {string}
     * @memberof RequisiteInput
     */
    user?: string | null;
    /**
     * 
     * @type {Array<any>}
     * @memberof RequisiteInput
     */
    embeddings?: Array<any> | null;
    /**
     * 
     * @type {ResponseSchemaInput}
     * @memberof RequisiteInput
     */
    schema: ResponseSchemaInput;
}

/**
 * Check if a given object implements the RequisiteInput interface.
 */
export function instanceOfRequisiteInput(value: object): value is RequisiteInput {
    if (!('strategy' in value) || value['strategy'] === undefined) return false;
    if (!('schema' in value) || value['schema'] === undefined) return false;
    return true;
}

export function RequisiteInputFromJSON(json: any): RequisiteInput {
    return RequisiteInputFromJSONTyped(json, false);
}

export function RequisiteInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequisiteInput {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'] == null ? undefined : json['_id'],
        'strategy': StrategyFromJSON(json['strategy']),
        'user': json['user'] == null ? undefined : json['user'],
        'embeddings': json['embeddings'] == null ? undefined : json['embeddings'],
        'schema': ResponseSchemaInputFromJSON(json['schema']),
    };
}

export function RequisiteInputToJSON(json: any): RequisiteInput {
    return RequisiteInputToJSONTyped(json, false);
}

export function RequisiteInputToJSONTyped(value?: RequisiteInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'strategy': StrategyToJSON(value['strategy']),
        'user': value['user'],
        'embeddings': value['embeddings'],
        'schema': ResponseSchemaInputToJSON(value['schema']),
    };
}

