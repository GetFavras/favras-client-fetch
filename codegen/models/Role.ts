/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Role
 */
export interface Role {
    /**
     * 
     * @type {string}
     * @memberof Role
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Role
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    createRole?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    createUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    createRequisite?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    createSchema?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    createComparison?: boolean;
    /**
     * 
     * @type {Set<string | null>}
     * @memberof Role
     */
    impersonateUsers?: Set<string | null>;
    /**
     * 
     * @type {boolean}
     * @memberof Role
     */
    deleteRequisite?: boolean;
}

/**
 * Check if a given object implements the Role interface.
 */
export function instanceOfRole(value: object): value is Role {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function RoleFromJSON(json: any): Role {
    return RoleFromJSONTyped(json, false);
}

export function RoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Role {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'] == null ? undefined : json['_id'],
        'name': json['name'],
        'createRole': json['create_role'] == null ? undefined : json['create_role'],
        'createUser': json['create_user'] == null ? undefined : json['create_user'],
        'createRequisite': json['create_requisite'] == null ? undefined : json['create_requisite'],
        'createSchema': json['create_schema'] == null ? undefined : json['create_schema'],
        'createComparison': json['create_comparison'] == null ? undefined : json['create_comparison'],
        'impersonateUsers': json['impersonate_users'] == null ? undefined : new Set(json['impersonate_users']),
        'deleteRequisite': json['delete_requisite'] == null ? undefined : json['delete_requisite'],
    };
}

export function RoleToJSON(json: any): Role {
    return RoleToJSONTyped(json, false);
}

export function RoleToJSONTyped(value?: Role | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'name': value['name'],
        'create_role': value['createRole'],
        'create_user': value['createUser'],
        'create_requisite': value['createRequisite'],
        'create_schema': value['createSchema'],
        'create_comparison': value['createComparison'],
        'impersonate_users': value['impersonateUsers'] == null ? undefined : Array.from(value['impersonateUsers'] as Set<any>),
        'delete_requisite': value['deleteRequisite'],
    };
}

