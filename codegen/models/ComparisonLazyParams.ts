/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComparisonLazyParams
 */
export interface ComparisonLazyParams {
    /**
     * 
     * @type {string}
     * @memberof ComparisonLazyParams
     */
    type: ComparisonLazyParamsTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ComparisonLazyParams
     */
    jsonSchema: string;
    /**
     * 
     * @type {string}
     * @memberof ComparisonLazyParams
     */
    comparisonKey?: string;
}


/**
 * @export
 */
export const ComparisonLazyParamsTypeEnum = {
    Lazy: 'LAZY'
} as const;
export type ComparisonLazyParamsTypeEnum = typeof ComparisonLazyParamsTypeEnum[keyof typeof ComparisonLazyParamsTypeEnum];


/**
 * Check if a given object implements the ComparisonLazyParams interface.
 */
export function instanceOfComparisonLazyParams(value: object): value is ComparisonLazyParams {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('jsonSchema' in value) || value['jsonSchema'] === undefined) return false;
    return true;
}

export function ComparisonLazyParamsFromJSON(json: any): ComparisonLazyParams {
    return ComparisonLazyParamsFromJSONTyped(json, false);
}

export function ComparisonLazyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComparisonLazyParams {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'jsonSchema': json['json_schema'],
        'comparisonKey': json['comparison_key'] == null ? undefined : json['comparison_key'],
    };
}

export function ComparisonLazyParamsToJSON(json: any): ComparisonLazyParams {
    return ComparisonLazyParamsToJSONTyped(json, false);
}

export function ComparisonLazyParamsToJSONTyped(value?: ComparisonLazyParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'json_schema': value['jsonSchema'],
        'comparison_key': value['comparisonKey'],
    };
}

