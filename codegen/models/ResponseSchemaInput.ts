/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequisitePropertyInput } from './RequisitePropertyInput';
import {
    RequisitePropertyInputFromJSON,
    RequisitePropertyInputFromJSONTyped,
    RequisitePropertyInputToJSON,
    RequisitePropertyInputToJSONTyped,
} from './RequisitePropertyInput';

/**
 * 
 * @export
 * @interface ResponseSchemaInput
 */
export interface ResponseSchemaInput {
    /**
     * 
     * @type {string}
     * @memberof ResponseSchemaInput
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseSchemaInput
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseSchemaInput
     */
    type: string;
    /**
     * 
     * @type {{ [key: string]: RequisitePropertyInput; }}
     * @memberof ResponseSchemaInput
     */
    properties: { [key: string]: RequisitePropertyInput; };
    /**
     * 
     * @type {Array<string>}
     * @memberof ResponseSchemaInput
     */
    required?: Array<string>;
}

/**
 * Check if a given object implements the ResponseSchemaInput interface.
 */
export function instanceOfResponseSchemaInput(value: object): value is ResponseSchemaInput {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function ResponseSchemaInputFromJSON(json: any): ResponseSchemaInput {
    return ResponseSchemaInputFromJSONTyped(json, false);
}

export function ResponseSchemaInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseSchemaInput {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
        'properties': (mapValues(json['properties'], RequisitePropertyInputFromJSON)),
        'required': json['required'] == null ? undefined : json['required'],
    };
}

export function ResponseSchemaInputToJSON(json: any): ResponseSchemaInput {
    return ResponseSchemaInputToJSONTyped(json, false);
}

export function ResponseSchemaInputToJSONTyped(value?: ResponseSchemaInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'type': value['type'],
        'properties': (mapValues(value['properties'], RequisitePropertyInputToJSON)),
        'required': value['required'],
    };
}

