/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComparisonErrorCode } from './ComparisonErrorCode';
import {
    ComparisonErrorCodeFromJSON,
    ComparisonErrorCodeFromJSONTyped,
    ComparisonErrorCodeToJSON,
    ComparisonErrorCodeToJSONTyped,
} from './ComparisonErrorCode';

/**
 * Represents an error during comparison.
 * @export
 * @interface ComparisonError
 */
export interface ComparisonError {
    /**
     * 
     * @type {ComparisonErrorCode}
     * @memberof ComparisonError
     */
    code: ComparisonErrorCode;
    /**
     * 
     * @type {string}
     * @memberof ComparisonError
     */
    message: string;
}



/**
 * Check if a given object implements the ComparisonError interface.
 */
export function instanceOfComparisonError(value: object): value is ComparisonError {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ComparisonErrorFromJSON(json: any): ComparisonError {
    return ComparisonErrorFromJSONTyped(json, false);
}

export function ComparisonErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComparisonError {
    if (json == null) {
        return json;
    }
    return {
        
        'code': ComparisonErrorCodeFromJSON(json['code']),
        'message': json['message'],
    };
}

export function ComparisonErrorToJSON(json: any): ComparisonError {
    return ComparisonErrorToJSONTyped(json, false);
}

export function ComparisonErrorToJSONTyped(value?: ComparisonError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': ComparisonErrorCodeToJSON(value['code']),
        'message': value['message'],
    };
}

