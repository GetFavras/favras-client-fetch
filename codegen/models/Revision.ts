/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RevisionResult } from './RevisionResult';
import {
    RevisionResultFromJSON,
    RevisionResultFromJSONTyped,
    RevisionResultToJSON,
    RevisionResultToJSONTyped,
} from './RevisionResult';
import type { ComparisonResult } from './ComparisonResult';
import {
    ComparisonResultFromJSON,
    ComparisonResultFromJSONTyped,
    ComparisonResultToJSON,
    ComparisonResultToJSONTyped,
} from './ComparisonResult';

/**
 * Result of document revision.
 * @export
 * @interface Revision
 */
export interface Revision {
    /**
     * 
     * @type {string}
     * @memberof Revision
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Revision
     */
    user: string;
    /**
     * 
     * @type {Date}
     * @memberof Revision
     */
    date: Date;
    /**
     * 
     * @type {Array<RevisionResult>}
     * @memberof Revision
     */
    results: Array<RevisionResult>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof Revision
     */
    projection?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: ComparisonResult; }}
     * @memberof Revision
     */
    comparisonResults?: { [key: string]: ComparisonResult; } | null;
    /**
     * 
     * @type {Date}
     * @memberof Revision
     */
    expiresAt?: Date | null;
}

/**
 * Check if a given object implements the Revision interface.
 */
export function instanceOfRevision(value: object): value is Revision {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function RevisionFromJSON(json: any): Revision {
    return RevisionFromJSONTyped(json, false);
}

export function RevisionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Revision {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'] == null ? undefined : json['_id'],
        'user': json['user'],
        'date': (new Date(json['date'])),
        'results': ((json['results'] as Array<any>).map(RevisionResultFromJSON)),
        'projection': json['projection'] == null ? undefined : json['projection'],
        'comparisonResults': json['comparison_results'] == null ? undefined : (mapValues(json['comparison_results'], ComparisonResultFromJSON)),
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function RevisionToJSON(json: any): Revision {
    return RevisionToJSONTyped(json, false);
}

export function RevisionToJSONTyped(value?: Revision | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'user': value['user'],
        'date': value['date'].toISOString(),
        'results': ((value['results'] as Array<any>).map(RevisionResultToJSON)),
        'projection': value['projection'],
        'comparison_results': value['comparisonResults'] == null ? undefined : (mapValues(value['comparisonResults'], ComparisonResultToJSON)),
        'expires_at': value['expiresAt'] == null ? value['expiresAt'] : value['expiresAt'].toISOString(),
    };
}

