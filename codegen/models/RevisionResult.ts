/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RevisionStatus } from './RevisionStatus';
import {
    RevisionStatusFromJSON,
    RevisionStatusFromJSONTyped,
    RevisionStatusToJSON,
    RevisionStatusToJSONTyped,
} from './RevisionStatus';
import type { RevisionError } from './RevisionError';
import {
    RevisionErrorFromJSON,
    RevisionErrorFromJSONTyped,
    RevisionErrorToJSON,
    RevisionErrorToJSONTyped,
} from './RevisionError';
import type { ReadResult } from './ReadResult';
import {
    ReadResultFromJSON,
    ReadResultFromJSONTyped,
    ReadResultToJSON,
    ReadResultToJSONTyped,
} from './ReadResult';

/**
 * 
 * @export
 * @interface RevisionResult
 */
export interface RevisionResult {
    /**
     * 
     * @type {string}
     * @memberof RevisionResult
     */
    filename: string | null;
    /**
     * 
     * @type {Array<string | null>}
     * @memberof RevisionResult
     */
    tags?: Array<string | null>;
    /**
     * 
     * @type {RevisionStatus}
     * @memberof RevisionResult
     */
    status: RevisionStatus;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof RevisionResult
     */
    result?: { [key: string]: any; } | null;
    /**
     * 
     * @type {ReadResult}
     * @memberof RevisionResult
     */
    readResult?: ReadResult | null;
    /**
     * 
     * @type {RevisionError}
     * @memberof RevisionResult
     */
    error?: RevisionError | null;
}



/**
 * Check if a given object implements the RevisionResult interface.
 */
export function instanceOfRevisionResult(value: object): value is RevisionResult {
    if (!('filename' in value) || value['filename'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function RevisionResultFromJSON(json: any): RevisionResult {
    return RevisionResultFromJSONTyped(json, false);
}

export function RevisionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevisionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'filename': json['filename'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'status': RevisionStatusFromJSON(json['status']),
        'result': json['result'] == null ? undefined : json['result'],
        'readResult': json['read_result'] == null ? undefined : ReadResultFromJSON(json['read_result']),
        'error': json['error'] == null ? undefined : RevisionErrorFromJSON(json['error']),
    };
}

export function RevisionResultToJSON(json: any): RevisionResult {
    return RevisionResultToJSONTyped(json, false);
}

export function RevisionResultToJSONTyped(value?: RevisionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filename': value['filename'],
        'tags': value['tags'],
        'status': RevisionStatusToJSON(value['status']),
        'result': value['result'],
        'read_result': ReadResultToJSON(value['readResult']),
        'error': RevisionErrorToJSON(value['error']),
    };
}

