/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RevisionErrorCode } from './RevisionErrorCode';
import {
    RevisionErrorCodeFromJSON,
    RevisionErrorCodeFromJSONTyped,
    RevisionErrorCodeToJSON,
    RevisionErrorCodeToJSONTyped,
} from './RevisionErrorCode';

/**
 * Represents an error during document revision.
 * @export
 * @interface RevisionError
 */
export interface RevisionError {
    /**
     * 
     * @type {RevisionErrorCode}
     * @memberof RevisionError
     */
    code: RevisionErrorCode;
    /**
     * 
     * @type {string}
     * @memberof RevisionError
     */
    message: string;
}



/**
 * Check if a given object implements the RevisionError interface.
 */
export function instanceOfRevisionError(value: object): value is RevisionError {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function RevisionErrorFromJSON(json: any): RevisionError {
    return RevisionErrorFromJSONTyped(json, false);
}

export function RevisionErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevisionError {
    if (json == null) {
        return json;
    }
    return {
        
        'code': RevisionErrorCodeFromJSON(json['code']),
        'message': json['message'],
    };
}

export function RevisionErrorToJSON(json: any): RevisionError {
    return RevisionErrorToJSONTyped(json, false);
}

export function RevisionErrorToJSONTyped(value?: RevisionError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': RevisionErrorCodeToJSON(value['code']),
        'message': value['message'],
    };
}

